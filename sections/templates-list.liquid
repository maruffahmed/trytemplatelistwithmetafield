{{ 'section-contact-form.css' | asset_url | stylesheet_tag }}
<script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>


{%- style -%}
  .templates-page {
    padding: 2rem;
  }
  @media screen and (min-width: 750px) {
    .templates-page {
      padding: 5rem 0;
    }
  }
  .templates-page-heading {
    font-size: 3rem;
    font-weight: 500;
    text-align: center;
    margin-bottom: 5rem;
    display: block;
  }
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}
    px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}
    px;
  }
  .d-block {
    display: block;
  }

  .grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 3rem;
  }
  @media screen and (min-width: 750px) {
    .grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }
  .card {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 10px;

  }
  .card .card-img {
    width: 100%;
    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);
  }
  .card .card-img img {
    width: 100%;
    height: 100%;
  }
  .card-body a {
    color: #000;
    font-size: 2rem;
    color: #121212;
  }
  .card-body a:hover {
    color: #8b8b8b;
  }
  .templates-filter {
    display: flex;
    justify-content: end;
    gap: 10px;
    margin-bottom: 2rem;
  }

  .templates-filter select {
    padding: 1rem;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 1.5rem;
    font-weight: 500;
    color: #000;

  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}
      px;
      padding-bottom: {{ section.settings.padding_bottom }}
      px;
    }
  }
{%- endstyle -%}



<div class="templates-page page-width section-{{ section.id }}-padding" x-data="{
      categories: [],
      selectedCat : 'all',
      addNewCategory(category) {
        this.categories.push(category);
      },
      filterCategories() {
        if(this.selectedCat == 'all') {
          return this.categories;
        } else {
          return this.categories.filter(cat => cat.title == this.selectedCat);
        }
      },
      uniqueCategories() {
        return this.categories.filter((v,i,a)=>a.findIndex(v2=>(v2.title===v.title))===i)
      }
      }">{% for page in pages %}
    {% if page.metafields.custom.template_name == "Home" %}
      <p x-init="addNewCategory({title : '{{ page.metafields.custom.page_type }}', url :'{{ page.url }}', featureImg : '{{page.metafields.custom.template_feature_image | img_url: 'large'}}' })"></p>
    {% endif %}
  {% endfor %}

  <h1 class="templates-page-heading">Templates</h1>
  {% comment %} {%- if section.settings.heading != blank -%}
  <h2 class="title title-wrapper--no-top-margin inline-richtext {{ section.settings.heading_size }}">
  {{ section.settings.heading }}
  </h2>
  {%- else -%}
  <h2 class="visually-hidden">{{ 'templates.contact.form.title' | t }}</h2>
  {%- endif -%} {% endcomment %}{% comment %} {% assign variable = value %} {% endcomment %}
  <div class="templates-filter">
    <select x-model="selectedCat" @change="selectedCat = $event.target.options[$event.target.selectedIndex].value; ">
      <option value="all" :selected="selectedCat === 'all'">All</option>
      <template x-for="cat in uniqueCategories()">
        <option
          :key="cat.title"
          :value="cat.title"
          :selected="selectedCat === cat.title"
          x-text="cat.title"></option>
      </template>
    </select>
  </div>
  <div class="grid">
    <template x-for="cat in filterCategories()">
      <div class="card">
        <div class="card-img">
          <a :href="cat.url">
            <img :src="cat.featureImg" :alt="cat.title">
          </a>
        </div>
        <div class="card-body">
          <a :href="cat.url" x-text="cat.title"></a>
        </div>
      </div>
    </template>
  </div>
</div>



{% schema %}
  {
    "name": "Templates",
    "tag": "section",
    "class": "section",
    "disabled_on": {
      "groups": ["header", "footer"]
    },
    "settings": [],
    "presets": [
      {
        "name": "Templates"
      }
    ]
  }
{% endschema %}